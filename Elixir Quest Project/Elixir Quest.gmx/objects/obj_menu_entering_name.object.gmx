<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>space = 16;
letters[0,0] = "A";
letters[1,0] = "B";
letters[2,0] = "C";
letters[3,0] = "D";
letters[4,0] = "E";
letters[5,0] = "F";
letters[6,0] = "G";
letters[7,0] = "H";
letters[8,0] = "";
letters[0,1] = "I";
letters[1,1] = "J";
letters[2,1] = "K";
letters[3,1] = "L";
letters[4,1] = "M";
letters[5,1] = "N";
letters[6,1] = "O";
letters[7,1] = "P";
letters[8,1] = "";
letters[0,2] = "Q";
letters[1,2] = "R";
letters[2,2] = "S";
letters[3,2] = "T";
letters[4,2] = "U";
letters[5,2] = "V";
letters[6,2] = "W";
letters[7,2] = "X";
letters[8,2] = "";
letters[0,3] = "Y";
letters[1,3] = "Z";
letters[2,3] = "a";
letters[3,3] = "b";
letters[4,3] = "c";
letters[5,3] = "d";
letters[6,3] = "e";
letters[7,3] = "f";
letters[8,3] = "";
letters[0,4] = "g";
letters[1,4] = "h";
letters[2,4] = "i";
letters[3,4] = "j";
letters[4,4] = "k";
letters[5,4] = "l";
letters[6,4] = "m";
letters[7,4] = "n";
letters[8,4] = "";
letters[0,5] = "o";
letters[1,5] = "p";
letters[2,5] = "q";
letters[3,5] = "r";
letters[4,5] = "s";
letters[5,5] = "t";
letters[6,5] = "u";
letters[7,5] = "v";
letters[8,5] = "";
letters[0,6] = "w";
letters[1,6] = "x";
letters[2,6] = "y";
letters[3,6] = "z";
letters[4,6] = "-";
letters[5,6] = ".";
letters[6,6] = ",";
letters[7,6] = "'";
letters[8,6] = "Done"

name[0] = "";
name[1] = "";
name[2] = "";
name[3] = "";
name[4] = "";
name[5] = "";
name[6] = "";
name[7] = "";

length_of_grid = 8;
height_of_grid = 6;
grid_box_size = 50;
origin_point_x = 256;
origin_point_y = 128;
selection_x = 0;
selection_y = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_right) selection_x++;
if keyboard_check_pressed(vk_left) selection_x--;
if keyboard_check_pressed(vk_down) selection_y++;
if keyboard_check_pressed(vk_up) selection_y--;
if keyboard_check_pressed(ord("D")) selection_x++;
if keyboard_check_pressed(ord("A")) selection_x--;
if keyboard_check_pressed(ord("S")) selection_y++;
if keyboard_check_pressed(ord("W")) selection_y--;

if selection_x&lt;0 selection_x=8;
if selection_x&gt;8 selection_x=0;
if selection_y&lt;0 selection_y=6;
if selection_y&gt;6 selection_y=0;

var the_letter;

if selection_x != 8 
{the_letter = string(letters[selection_x,selection_y]);}

select1 = keyboard_check_pressed(vk_enter)
select2 = keyboard_check_pressed(ord("E"))
select = select1 + select2

if (global.message_draw = "Good luck.")
{
    if (select == 1) &amp;&amp; selection_x !=8
    {
        if  name[0] = "" {name[0] = the_letter}
        else
        {
            if  name[1] = "" {name[1] = the_letter}
            else
            {
                if  name[2] = "" {name[2] = the_letter}
                else
                {    
                    if  name[3] = "" {name[3] = the_letter}
                    else
                    {
                        if  name[4] = "" {name[4] = the_letter}
                        else
                        {
                            if  name[5] = "" {name[5] = the_letter}
                            else
                             {
                                if  name[6] = "" {name[6] = the_letter}
                                else
                                {
                                    if  name[7] = "" {name[7] = the_letter}
                                }
                                }
                                }
                                }
                                }
                                }
                                }
    }
}

if keyboard_check_pressed(vk_backspace)
{
     if  name[7] != "" {name[7] = ""}
        else
        {
            if  name[6] != "" {name[6] = ""}
            else
            {
                if  name[5] != "" {name[5] = ""}
                else
                {    
                    if  name[4] != "" {name[4] = ""}
                    else
                    {
                        if  name[3] != "" {name[3] = ""}
                        else
                        {
                            if  name[2] != "" {name[2] = ""}
                            else
                             {
                                if  name[1] != "" {name[1] = ""}
                                else
                                {
                                    if  name[0] != "" {name[0] = ""}
                                }
                                }
                                }
                                }
                                }
                                }
                                }

}

if (select == 1) &amp;&amp; selection_x = 8 &amp;&amp; selection_y = 6
{
    global.player_name = name[1] + name[2] + name[3] + name[4] + name[5] + name[6] + name[7];
    room_goto(rm_entername_2);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
var j;
draw_set_font(fnt_entername)
draw_set_colour(c_white)
for (i=0; i &lt;= length_of_grid; i++)
{
    for (j=0; j &lt;= height_of_grid; j++) 
         {
         draw_text( i * grid_box_size + origin_point_x, j * grid_box_size + origin_point_y ,string( letters[ i, j ] )) 
         }
};
draw_set_colour(c_yellow)
draw_text( selection_x * grid_box_size + origin_point_x, selection_y * grid_box_size + origin_point_y ,string( letters[ selection_x , selection_y]));

draw_set_colour(c_white)
var n;
for (n = 0; n &lt; array_length_1d(name); n += 1)
{
    draw_text(x + space + (n * space) + 154 , y - 48 , string(name[n]))
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
