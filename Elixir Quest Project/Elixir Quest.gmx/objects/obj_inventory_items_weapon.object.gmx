<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory_select</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
origin_point_x = 311;
origin_point_y = 63;
current_item = obj_game_manager.current_weapon_item;
current_item_quantity = obj_game_manager.current_weapon_quantity;
var replaced_item;
var replaced_item_quantity;

image_speed = 1/6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_inventory_inputs()
if max(keyboard_check_pressed(vk_escape),keyboard_check_pressed(ord("I")),keyboard_check_pressed(vk_tab),0)
{
    obj_game_manager.items_tab_controls = "Inventory";
    instance_destroy();
}

//Change Tab
if changetab_right
{
    instance_destroy();
}

if !(obj_game_manager.items_tab_controls = "Weapon") exit;

if !(current_item == undefined)
{
    replaced_item = current_item;
    replaced_item_quantity = current_item_quantity;
    repeat (replaced_item_quantity)
    {
        inventory_pickup_item(replaced_item);
    }
}

current_item = obj_inventory_items.current_item;
current_item_quantity = obj_inventory_items.current_item_quantity;
with obj_inventory_items
{
    box[# selection_x, selection_y] = item.none;
    quantity[# selection_x, selection_y] = 0;
}
obj_game_manager.items_tab_controls = "Inventory";

obj_game_manager.current_weapon_item = current_item;
obj_game_manager.current_weapon_quantity = current_item_quantity;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Shows the slot that is selected
draw_set_colour(c_black);

//Drawing Item Equipment Icons
var tx = view_xview[0] + (origin_point_x);
var ty = view_yview[0] + (origin_point_y);

draw_sprite(spr_items, current_item, tx, ty);
if (current_item_quantity &gt; 0)
{
    draw_circle_colour(tx + 36, ty + 36, 6, c_white, c_gray, false);
    draw_set_font(fnt_inventory_quantity);
    draw_text(tx + 37, ty + 37, current_item_quantity);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
