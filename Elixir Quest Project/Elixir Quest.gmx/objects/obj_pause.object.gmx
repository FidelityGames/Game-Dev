<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_small_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9998</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declaring Variables

menu[0] = "Resume"
menu[1] = "Inventory"
menu[2] = "Options"
menu[3] = "Main Menu"
menu[4] = "Quit Game"

space = 32;
mpos = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause menu navigation
    var move = 0;
    move -= max(keyboard_check_pressed(ord("W")),keyboard_check_pressed(vk_up),0);
    move += max(keyboard_check_pressed(ord("S")),keyboard_check_pressed(vk_down),0);
    
    if (move != 0)
    {
        mpos += move;
        if (mpos &lt; 0) mpos = array_length_1d(menu) -1;
        if (mpos &gt; array_length_1d(menu) - 1) mpos = 0;
        audio_play_sound(snd_menu_navigation,0,0);
        
    }
    
    var enter;
    enter = max(keyboard_check_pressed(vk_enter),keyboard_check_pressed(ord("E")),keyboard_check_pressed(vk_space),0);
    if (enter == 1) scr_menu_pause(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If user is in a room where it is okay to pause, the pause menu is drawn to the screen

draw_set_halign(fa_middle);
draw_set_valign(fa_middle);
draw_set_colour(c_black);
draw_set_alpha(0.75);
draw_rectangle
(
    view_xview[0],
    view_yview[0],
    view_xview[0] + view_wview[0],
    view_yview[0] + view_hview[0],
    0
)
draw_set_halign(fa_center);
draw_set_font(fnt_small_pixels);
draw_set_colour(c_purple);
draw_set_alpha(2);
draw_text(view_xview[0] + 240 ,view_yview[0] + 52,"Game Paused");
draw_set_colour(c_white);

//Displays the menu options vertically on the screen
var m;
for (m = 0; m &lt; array_length_1d(menu); m += 1)
{
    draw_text(view_xview[0] + 240 ,view_yview[0] + 84 + (m * space),string(menu[m]))
}
//draw_sprite(sprite_index,0, view_xview[0] + 180 , view_yview[0] + 84 + mpos * space );
draw_set_colour(c_yellow);
draw_text(view_xview[0] + 240 ,view_yview[0] + 84 + (mpos * space),string(menu[mpos]));
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
