<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory_select</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

length_of_grid = 2;
height_of_grid = 2;
grid_box_size = 43;
origin_point_x = 265;
origin_point_y = 63;
selection_x = 0;
selection_y = 0;
var xx;
var yy;
var current_ability;
var current_ability_quantity;
var replaced_ability;
var replaced_ability_quantity;

image_speed = 1/6

//Create the ds grids

//Items
box = obj_game_manager.abilities_equipment_grid_box

//Quantity of the item
quantity = obj_game_manager.abilities_equipment_grid_quantity
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_inventory_inputs()
if max(keyboard_check_pressed(vk_escape),keyboard_check_pressed(ord("I")),keyboard_check_pressed(vk_tab),0)
{
    obj_game_manager.abilities_tab_controls = "Inventory";
    instance_destroy();
}
if !(obj_game_manager.abilities_tab_controls = "Equipment") exit;

//User input
if key_right {selection_x++};
if key_left {selection_x--};
if key_down {selection_y++};
if key_up {selection_y--};

//Loops the sides of the grid
if selection_x&lt;0 selection_x=1;
if selection_x&gt;1 selection_x=0;
if selection_y&lt;0 selection_y=1;
if selection_y&gt;1 selection_y=0;

//Change Tab
if changetab_left
{
    obj_game_manager.abilities_tab_controls = "Inventory";
    instance_create(x,y,obj_inventory_items);
    with (obj_inventory_abilities) {instance_destroy();}
    instance_destroy();
}

//Item Selection
if select == 1
{
    
    if box[# selection_x , selection_y] &gt; 0
    {
        replaced_ability = box[# selection_x, selection_y];
        replaced_ability_quantity = quantity[# selection_x, selection_y];
        repeat (replaced_ability_quantity)
        {
            inventory_pickup_ability(replaced_ability);
        }
    }
    current_ability = obj_inventory_abilities.current_ability;
    current_ability_quantity = obj_inventory_abilities.current_ability_quantity;
    box[# selection_x, selection_y] = current_ability;
    quantity[# selection_x, selection_y] = current_ability_quantity;
    with obj_inventory_abilities
    {
        box[# selection_x, selection_y] = ability.none;
        quantity[# selection_x, selection_y] = 0;
    }
    obj_game_manager.abilities_tab_controls = "Inventory";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Shows the slot that is selected
draw_set_colour(c_black);
if (obj_game_manager.abilities_tab_controls = "Equipment")
{
    draw_sprite(sprite_index,-1, view_xview[0] + (selection_x * grid_box_size + origin_point_x) ,view_yview[0] + (selection_y * grid_box_size + origin_point_y));
}
//Drawing Item Equipment Icons
for (yy = 0; yy &lt; height_of_grid; yy++)
{
    for (xx = 0; xx &lt; length_of_grid; xx++)
    {
        var tx = view_xview[0] + (xx * grid_box_size + origin_point_x);
        var ty = view_yview[0] + (yy * grid_box_size + origin_point_y);
        
        draw_sprite(spr_abilities, box[# xx, yy], tx, ty);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
